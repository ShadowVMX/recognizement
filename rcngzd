#!/bin/bash
#Análisis completo del target
#Script para facilitar análisis.



trap exity SIGINT

exity(){
	echo " "
	echo "$(tput setaf 3)[$(tput setaf 1)!$(tput setaf 3)]Saliendo ..."
	service apache2 stop
	sleep 1
	echo " "
	echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]Thanks!"
	echo " "
	exit
}

#rcngzd <ip> 

#Variable para settear el root.

if [[ $EUID != 0 ]] ; then
	echo " "
	echo "$(tput setaf 1)$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]NECESITAS SER ROOT."
	echo " "
	exit
fi

#------------------------------------------
#
#Reconocimiento de parámetro <ip>

if [[ -z $1 ]] ; then
	echo "$(tput setaf 105)" ; figlet Recognizement
	echo "$(tput setaf 6) "
	echo "V3rs10n $(tput setaf 1)1.6.5"
	echo " "
	echo "$(tput setaf 6)rcngzd m4d3 by [$(tput setaf 3)ShadowVMX$(tput setaf 6)] --> $(tput setaf 1)https://github.com/ShadowVMX"
	sleep 1
	echo " "
	echo " "
	echo "$(tput setaf 6)[$(tput setaf 1)-$(tput setaf 6)]rcngz $(tput setaf 1)<ip>"
	echo " "
	exit
fi

#------------------------------------------
#
#Comprobación de Whichsystem && extractports

echo " "
echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]Verificando componentes en su sistema..."
sleep 1


ls -l /usr/bin/Whichsystem &> /dev/null


echo " "
echo " "
sleep 1

if [[ $? == 0 ]] ; then 
	echo " "
	echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]Whichsystem ya está en su sistema, abortando descarga."
	echo " "
else
	git clone https://github.com/ShadowVMX/Whichsystem.git &> /dev/null
	chmod +x Whichsystem/Whichsystem 
	cp Whichsystem/Whichsystem /usr/bin/

	echo " "
	echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]Whichsystem descargado en su sistema."
	echo " "
	echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]Podrá usar la herramienta directamente en su sistema --> Whichsystem <ip>"
	echo " "
	echo "ctrl_c para cerrar cuando vea el código."
	echo " "
fi


#--------------------------------------------------------------
#
#Instalación extracports
#
sleep 1.5

ls -l /usr/bin/extractports &> /dev/null

if [[ $? == 0 ]] ; then 
        echo " "
        echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]Extractports ya está en su sistema, abortando descarga."
        echo " "
else
        git clone https://github.com/ShadowVMX/extractports.git &> /dev/null
        chmod +x extractports/extractports 
        cp extractports/extractports /usr/bin/

        echo " "
        echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]Extractports descargado en su sistema."
        echo " "
        echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]Podrá usar la herramienta directamente en su sistema --> extractports + <captura grepeable nmap>"
        echo " "
fi

sleep 1.5

#---------------------------------------------------------------
#
#Uso herramienta Whichsystem
#

echo "$(tput setaf 5) "
echo "___________________________________________________________________"
echo "___________________________________________________________________"
echo "$(tput setaf 6) "

Whichsystem $1

echo " "
echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]Reporte de S.O objetivo completo.[!]"
echo " "

echo "$(tput setaf 5)"
echo "___________________________________________________________________"
echo "___________________________________________________________________"
echo " "
sleep 1


#Usando nmap para generar allports 1 y 2 según análisis exhaustivo.
echo " "
echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]Escaneando todos los puertos abiertos posibles ..."
nmap -sS --min-rate 5000 -n $1 -oG allports &> /dev/null

echo "$(tput setaf 5)"
#---Parseo de información con extractports---#

extractports allports

echo "$(tput setaf 5)"
echo "___________________________________________________________________"
echo "___________________________________________________________________"
echo "$(tput setaf 6) "


nmap -sS --min-rate 5000 -n $1 -oX allports.xml &> /dev/null
xsltproc allports.xml -o weburl.html &> /dev/null

#Pasar el index.html a la carpeta actual y después pasarla de nuevo.

service apache2 start &> /dev/null

cp /var/www/html/index.html . &> /dev/null
cp weburl.html /var/www/html/index.html &> /dev/null


#Avisar de abrir la URL

WebS=`hostname -I`

echo " "
echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]Abra el navegador --> $(tput setaf 1)http://localhost"
echo "$(tput setaf 6) "

#Dar ventaja al usuario para que procese.
cat allports | grep "23/open/tcp//telnet//" &> /dev/null
if [[ $? = 0 ]] ; then
        echo " "
        echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]telnet --> try telnet <ip>"
        echo " "
fi

cat allports | grep "80/open/tcp//http//" &> /dev/null
if [[ $? = 0 ]] ; then
	echo " "
	echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]url --> http://$1"
	echo " "
fi

cat allports | grep "21/open/tcp//ftp//" &> /dev/null
if [[ $? = 0 ]] ; then
        echo " "
        echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]ftp --> try [user:anonymoys] [pass:empty/vacía]"
        echo " "
fi

cat allports | grep "445/open/tcp//microsoft-ds//" &> /dev/null
if [[ $? = 0 ]] ; then
        echo " "
        echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]smb --> try [smbclient -L //<ip>] | smbmap -H <ip> | crackmapexec smb <ip>"
        echo " "
fi

cat allports | grep "3306/open/tcp//ftp//" &> /dev/null
if [[ $? = 0 ]] ; then
        echo " "
        echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]mysql (3306) --> mysql -u 'username' -h <ip> -p'password'"
        echo " "
fi


cat allports | grep "8080/open/tcp//ftp//" &> /dev/null
if [[ $? = 0 ]] ; then
        echo " "
        echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]http://$1:8080 --> Open URL"
        echo " "
fi

cat allports | grep "22/open/tcp//ftp//" &> /dev/null
if [[ $? = 0 ]] ; then
        echo " "
        echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]ssh --> Verifica versión con exploitdb (searchsploit) e intenta sacar usuarios si es old version."
        echo " "
fi

cat allports | grep "1337/open/tcp//ftp//" &> /dev/null
if [[ $? = 0 ]] ; then
        echo " "
        echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]Posible backdoor."
        echo " "
fi



#Continua el escaneo

#nmap -p"-" --open -T5 -n $1 -oG allports2 &> /dev/null 
echo " "
nmap -sU --min-rate 5000 -n $1 -oG allportsUDP &> /dev/null
echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]Archivos allports (TCP/UDP) generados."

echo "$(tput setaf 5) "
echo "___________________________________________________________________"
echo "___________________________________________________________________"
echo " "

#Crear el archivo targeted

sleep 2

nmap -sCV --min-rate 5000 -n $1 -oN targeted &> /dev/null

echo " "
echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]Archivo targeted generado."
echo " "
sleep 2

echo "$(tput setaf 5) "
echo "___________________________________________________________________"
echo "___________________________________________________________________"
echo " "

#Usamos el RKT para el análisis URL --> web

RKT=`cat allports | tr " " "\n" | grep "^80" | cut -d "/" -f1 | head -1`

if [[ $RKT = 80 ]] ; then
	whatweb http://$1/ > kyndofweb
	echo " "
	echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]Kyndofweb generado."
	echo " "
	echo "$(tput setaf 5) "
echo "___________________________________________________________________"
echo "___________________________________________________________________"
echo " "
	sleep 2
	echo " "
	echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]Fuerza bruta contra subdirectorios."
	echo " "
	gobuster dir -w /usr/share/wordlists/dirb/common.txt -u http://$1 > subdirect 2> /dev/null
	
	echo "$(tput setaf 5) "
echo "___________________________________________________________________"
echo "___________________________________________________________________"
echo " "	

	echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]Completado."
	echo " "

else
	echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]No web on target."
	echo " "
fi

#Borramos el ruido.

rm -f weburl.html &> /dev/null
service apache2 stop &> /dev/null
rm -rf Whichsystem/ &> /dev/null
rm -rf extractports/ &> /dev/null
cp index.html /var/www/html/index.html &> /dev/null
rm -f index.html &> /dev/null
rm -f allports.xml &> /dev/null

#Aviso final

echo " "
echo "$(tput setaf 6)[$(tput setaf 1)!$(tput setaf 6)]Todo el reporte podrá ser visualizado en la carpeta actual con ls -l."
echo " "

#-----------------FIN-------------------#
